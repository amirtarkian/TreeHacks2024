{"ast":null,"code":"var _jsxFileName = \"/Users/conniely/treehacks24/TreeHacks2024/treehacks/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../pages/Home.css\";\nimport { useState } from \"react\";\nimport StatsInput from \"../components/StatsInput/StatsInput\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport SubmitButton from \"../components/SubmitButton/SubmitButton\";\nimport AppTitle from \"../components/AppTitle/AppTitle\";\nimport App from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  // State for storing input values\n  const [soilType, setSoilType] = useState(\"\");\n  const [soilPH, setSoilPH] = useState(\"\");\n  const [nutrientContent, setNutrientContent] = useState(\"\");\n  const [soilMoisture, setSoilMoisture] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n\n  // State for storing the selected option from the dropdown\n  const [selectedOption, setSelectedOption] = useState(\"\");\n\n  // Options for the dropdown\n  const options = [{\n    label: \"Corn\",\n    value: \"corn\"\n  }, {\n    label: \"Tomatoes\",\n    value: \"tomatoes\"\n  }];\n\n  // Separate handleChange functions for each input and the dropdown\n  const handleInputChange = (e, setter) => {\n    setter(e.target.value);\n  };\n  const handleDropdownChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleSubmitClick = () => {\n    console.log(\"Submit button clicked\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apptile\",\n      children: /*#__PURE__*/_jsxDEV(AppTitle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parentContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdownContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a Crop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          options: options,\n          selected: selectedOption,\n          onChange: handleDropdownChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statsinput\",\n        children: [/*#__PURE__*/_jsxDEV(StatsInput, {\n          type: \"text\",\n          placeholder: \"Soil Type\",\n          value: soilType,\n          onChange: e => handleInputChange(e, setSoilType)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatsInput, {\n          type: \"text\",\n          placeholder: \"Soil pH\",\n          value: soilPH,\n          onChange: e => handleInputChange(e, setSoilPH)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatsInput, {\n          type: \"text\",\n          placeholder: \"Nutrient Content \",\n          value: nutrientContent,\n          onChange: e => handleInputChange(e, setNutrientContent)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatsInput, {\n          type: \"text\",\n          placeholder: \"Soil Moisture\",\n          value: soilMoisture,\n          onChange: e => handleInputChange(e, setSoilMoisture)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatsInput, {\n          type: \"text\",\n          placeholder: \"Temperature\",\n          value: temperature,\n          onChange: e => handleInputChange(e, setTemperature)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"r3hLxnuPvCzVsjyVfLf7MDWo3lM=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","StatsInput","Dropdown","SubmitButton","AppTitle","App","jsxDEV","_jsxDEV","Home","_s","soilType","setSoilType","soilPH","setSoilPH","nutrientContent","setNutrientContent","soilMoisture","setSoilMoisture","temperature","setTemperature","selectedOption","setSelectedOption","options","label","value","handleInputChange","e","setter","target","handleDropdownChange","handleSubmitClick","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/conniely/treehacks24/TreeHacks2024/treehacks/src/pages/Home.js"],"sourcesContent":["import React from \"react\";\nimport \"../pages/Home.css\";\nimport { useState } from \"react\";\nimport StatsInput from \"../components/StatsInput/StatsInput\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport SubmitButton from \"../components/SubmitButton/SubmitButton\";\nimport AppTitle from \"../components/AppTitle/AppTitle\";\nimport App from \"../App\";\n\nexport default function Home() {\n  // State for storing input values\n  const [soilType, setSoilType] = useState(\"\");\n  const [soilPH, setSoilPH] = useState(\"\");\n  const [nutrientContent, setNutrientContent] = useState(\"\");\n  const [soilMoisture, setSoilMoisture] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n\n  // State for storing the selected option from the dropdown\n  const [selectedOption, setSelectedOption] = useState(\"\");\n\n  // Options for the dropdown\n  const options = [\n    { label: \"Corn\", value: \"corn\" },\n    { label: \"Tomatoes\", value: \"tomatoes\" },\n  ];\n\n  // Separate handleChange functions for each input and the dropdown\n  const handleInputChange = (e, setter) => {\n    setter(e.target.value);\n  };\n\n  const handleDropdownChange = (e) => {\n    setSelectedOption(e.target.value);\n  };\n\n  const handleSubmitClick = () => {\n    console.log(\"Submit button clicked\");\n  };\n\n  return (\n    <div>\n      <div className=\"apptile\">\n        <AppTitle />\n      </div>\n      <div className=\"parentContainer\">\n        <div className=\"dropdownContainer\">\n          <h2>Select a Crop</h2>\n          <Dropdown\n            options={options}\n            selected={selectedOption}\n            onChange={handleDropdownChange}\n          />\n        </div>\n        <div className=\"statsinput\">\n          <StatsInput\n            type=\"text\"\n            placeholder=\"Soil Type\"\n            value={soilType}\n            onChange={(e) => handleInputChange(e, setSoilType)}\n          />\n\n          <StatsInput\n            type=\"text\"\n            placeholder=\"Soil pH\"\n            value={soilPH}\n            onChange={(e) => handleInputChange(e, setSoilPH)}\n          />\n          <StatsInput\n            type=\"text\"\n            placeholder=\"Nutrient Content \"\n            value={nutrientContent}\n            onChange={(e) => handleInputChange(e, setNutrientContent)}\n          />\n\n          <StatsInput\n            type=\"text\"\n            placeholder=\"Soil Moisture\"\n            value={soilMoisture}\n            onChange={(e) => handleInputChange(e, setSoilMoisture)}\n          />\n          <StatsInput\n            type=\"text\"\n            placeholder=\"Temperature\"\n            value={temperature}\n            onChange={(e) => handleInputChange(e, setTemperature)}\n          />\n        </div>\n\n        {/* <div>\n        <SubmitButton label=\"Submit\" onClick={handleSubmitClick} />\n      </div> */}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}