{"ast":null,"code":"var _jsxFileName = \"/Users/conniely/treehacks24/TreeHacks2024/treehacks/src/components/AppTitle/AppTitle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./AppTitle.css\"; // Ensure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppTitle = () => {\n  _s();\n  const fullText1 = \"Welcome to\";\n  const fullText2 = \"TerraSomething\";\n  const [text1, setText1] = useState(\"\");\n  const [text2, setText2] = useState(\"\");\n  const [isFirstLineComplete, setIsFirstLineComplete] = useState(false);\n  useEffect(() => {\n    if (!isFirstLineComplete) {\n      if (text1.length < fullText1.length) {\n        setTimeout(() => {\n          setText1(fullText1.slice(0, text1.length + 1));\n        }, 150); // Adjust speed of typing here\n      } else {\n        setIsFirstLineComplete(true);\n      }\n    } else {\n      if (text2.length < fullText2.length) {\n        setTimeout(() => {\n          setText2(fullText2.slice(0, text2.length + 1));\n        }, 150); // Continue typing the second part\n      }\n    }\n  }, [text1, text2, isFirstLineComplete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [text1, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: !isFirstLineComplete ? \"cursor\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isFirstLineComplete && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [text2, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cursor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AppTitle, \"d6edxo8593s++Xnw+pbnt4kHIBQ=\");\n_c = AppTitle;\nexport default AppTitle;\nvar _c;\n$RefreshReg$(_c, \"AppTitle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AppTitle","_s","fullText1","fullText2","text1","setText1","text2","setText2","isFirstLineComplete","setIsFirstLineComplete","length","setTimeout","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/conniely/treehacks24/TreeHacks2024/treehacks/src/components/AppTitle/AppTitle.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./AppTitle.css\"; // Ensure the path is correct\n\nconst AppTitle = () => {\n  const fullText1 = \"Welcome to\";\n  const fullText2 = \"TerraSomething\";\n  const [text1, setText1] = useState(\"\");\n  const [text2, setText2] = useState(\"\");\n  const [isFirstLineComplete, setIsFirstLineComplete] = useState(false);\n\n  useEffect(() => {\n    if (!isFirstLineComplete) {\n      if (text1.length < fullText1.length) {\n        setTimeout(() => {\n          setText1(fullText1.slice(0, text1.length + 1));\n        }, 150); // Adjust speed of typing here\n      } else {\n        setIsFirstLineComplete(true);\n      }\n    } else {\n      if (text2.length < fullText2.length) {\n        setTimeout(() => {\n          setText2(fullText2.slice(0, text2.length + 1));\n        }, 150); // Continue typing the second part\n      }\n    }\n  }, [text1, text2, isFirstLineComplete]);\n\n  return (\n    <div>\n      <h1>\n        {text1}\n        <span className={!isFirstLineComplete ? \"cursor\" : \"\"}></span>\n      </h1>\n      {isFirstLineComplete && (\n        <h1>\n          {text2}\n          <span className=\"cursor\"></span>\n        </h1>\n      )}\n    </div>\n  );\n};\n\nexport default AppTitle;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,SAAS,GAAG,YAAY;EAC9B,MAAMC,SAAS,GAAG,gBAAgB;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErEC,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,mBAAmB,EAAE;MACxB,IAAIJ,KAAK,CAACM,MAAM,GAAGR,SAAS,CAACQ,MAAM,EAAE;QACnCC,UAAU,CAAC,MAAM;UACfN,QAAQ,CAACH,SAAS,CAACU,KAAK,CAAC,CAAC,EAAER,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC,CAAC;QAChD,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACX,CAAC,MAAM;QACLD,sBAAsB,CAAC,IAAI,CAAC;MAC9B;IACF,CAAC,MAAM;MACL,IAAIH,KAAK,CAACI,MAAM,GAAGP,SAAS,CAACO,MAAM,EAAE;QACnCC,UAAU,CAAC,MAAM;UACfJ,QAAQ,CAACJ,SAAS,CAACS,KAAK,CAAC,CAAC,EAAEN,KAAK,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC;QAChD,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACX;IACF;EACF,CAAC,EAAE,CAACN,KAAK,EAAEE,KAAK,EAAEE,mBAAmB,CAAC,CAAC;EAEvC,oBACET,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,GACGT,KAAK,eACNL,OAAA;QAAMe,SAAS,EAAE,CAACN,mBAAmB,GAAG,QAAQ,GAAG;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,EACJV,mBAAmB,iBAClBT,OAAA;MAAAc,QAAA,GACGP,KAAK,eACNP,OAAA;QAAMe,SAAS,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvCID,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}